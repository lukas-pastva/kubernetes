{{- $projectStep := 100 -}} {{/* large enough so waves don't collide across apps in a project */}}

{{- range $pIdx, $appProject := .Values.appProjects }}
  {{- $projectBase := mul $pIdx $projectStep }}
  {{- range $aIdx, $application := $appProject.applications }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ $application.name }}
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: {{ add $projectBase $aIdx | printf "%v" | quote }}
spec:
  project: {{ $appProject.namespace }}
  sources:
  - targetRevision: {{ $application.targetRevision | default "main" }}
    repoURL: {{ $application.repoURL | default $.Values.globals.repoURL | quote }}
    {{- if $application.path }}
    {{- if $application.directoryRecurse }}
    directory:
      recurse: true
    {{- end }}
    path: "charts/{{ $application.path }}"
    {{- end }}
    {{- if $application.chart }}
    chart: {{ $application.chart }}
    {{- end }}
    helm:
      {{- if $application.skipCrds }}
      skipCrds: true
      {{- end }}
      valueFiles:
      - $values/values/{{ $application.name }}.yaml
  - repoURL: {{ $.Values.globals.repoURL | quote }}
    targetRevision: main
    ref: values
  destination:
    namespace: {{ $appProject.namespace }}
    name: in-cluster
  syncPolicy:
    {{- if $application.autoSync }}
    automated:
      prune: true
      selfHeal: true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
    syncOptions:
    - CreateNamespace=false
    - PruneLast=true
    - ApplyOutOfSyncOnly=true
    - RespectIgnoreDifferences=true
    {{- end }}
    {{- if $application.replace }}
    - Replace=true
    {{- end }}
  {{- end }}
{{- end }}
