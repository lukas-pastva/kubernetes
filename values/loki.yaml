ingress:
  enabled: true
  hosts:
    - loki.tronic.sk
  ingressClassName: "nginx"
global:
  dnsService: rke2-coredns-rke2-coredns
monitoring:
  serviceMonitor:
    labels:
      release: "monitoring"
  rules:
    labels:
      release: "monitoring"    
  selfMonitoring:
    enabled: false
    grafanaAgent:
      installOperator: false
  lokiCanary:
    enabled: false
test:
  enabled: false
backend:
  replicas: 3
  persistence:
    enableStatefulSetAutoDeletePVC: false
    storageClass: local-path
  extraArgs:
    - '-config.expand-env=true'
  extraEnv:
    - name: S3_ENDPOINT
      valueFrom:
        secretKeyRef:
          name: monitoring-s3
          key: endpoint
    - name: S3_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: monitoring-s3
          key: accessKeyID
    - name: S3_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: monitoring-s3
          key: secretAccessKey
gateway:
write:
  replicas: 3
  persistence:
    storageClass: local-path
  extraArgs:
    - '-config.expand-env=true'
  extraEnv:
    - name: S3_ENDPOINT
      valueFrom:
        secretKeyRef:
          name: monitoring-s3
          key: endpoint
    - name: S3_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: monitoring-s3
          key: accessKeyID
    - name: S3_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: monitoring-s3
          key: secretAccessKey
read:
  replicas: 3
  persistence:
    storageClass: local-path
  extraArgs:
    - '-config.expand-env=true'
  extraEnv:
    - name: S3_ENDPOINT
      valueFrom:
        secretKeyRef:
          name: monitoring-s3
          key: endpoint
    - name: S3_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: monitoring-s3
          key: accessKeyID
    - name: S3_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: monitoring-s3
          key: secretAccessKey
loki:
  storage:
    bucketNames:
      chunks: loki
      ruler: loki
      admin: loki
    type: s3
    s3:
      region: "auto"
      endpoint: ${S3_ENDPOINT}
      secretAccessKey: ${S3_SECRET_ACCESS_KEY}
      accessKeyId: ${S3_ACCESS_KEY_ID}
      s3ForcePathStyle: true
  rulerConfig:
    alertmanager_url: http://alertmanager-operated.monitoring.svc.cluster.local:9093
    rule_path: /rules
    wal:
      dir: /tmp/ruler-wal
    storage:
      type: local
      local:
        directory: /rules
    remote_write:
      enabled: true
      client:
        url: http://prometheus-operated.monitoring.svc.cluster.local:9090/api/v1/write
  auth_enabled: false
sidecar:
  rules:
    folder: /rules/fake/
