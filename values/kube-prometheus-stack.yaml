kubeControllerManager:
  serviceMonitor:
    enabled: false 
kubeEtcd:
  serviceMonitor:
    enabled: false 
kubeScheduler:
  serviceMonitor:
    enabled: false 
defaultRules:
  disabled:
    KubeControllerManagerDown: true
    KubeSchedulerDown: true
    etcdMembersDown: true
    etcdInsufficientMembers: true
    KubeProxyDown: true
crds:
  enabled: false
alertmanager:
  ingress:
    enabled: true
    hosts:
      - alertmanager.tronic.sk
    ingressClassName: nginx
grafana:
  ingress:
    enabled: true
    hosts:
      - grafana.tronic.sk
    ingressClassName: nginx
  admin:
    existingSecret: "grafana-admin-secret"
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://thanos-query.monitoring:9090
          access: proxy
          uid: P5DCFC7561CCDE821
        - name: Tempo
          type: tempo
          uid: tempo
          url: http://tempo-query-frontend.monitoring.svc.cluster.local:3200
          access: proxy
          jsonData:
            httpMethod: GET
            serviceMap:
              datasourceUid: P5DCFC7561CCDE821
            tracesToMetrics:
              datasourceUid: P5DCFC7561CCDE821
              spanStartTimeShift: "-5m"
              spanEndTimeShift:    "5m"
              tags: [ service.name ]
              queries:
                - name: req_rate
                  query: |
                    sum(rate(http_server_requests_seconds_count{service="$service"}[5m]))
            tracesToLogsV2:
              datasourceUid: loki
              filterByTraceID: true
              filterBySpanID:  true
              spanStartTimeShift: "-5m"
              spanEndTimeShift:    "5m"
              tags: [ service.name ]
              customQuery: |
                {service="$service"} |= "$traceId"
        - name: Loki
          type: loki
          uid: loki
          url: http://loki-read.monitoring:3100
          access: proxy
          jsonData:
            derivedFields:
              - name: traceID
                matcherRegex: 'trace[_-]?id=(\w+)'
                datasourceUid: tempo
                url: '$${__value.raw}'
  plugins:
    - agenty-flowcharting-panel
    - camptocamp-prometheus-alertmanager-datasource
    - grafana-athena-datasource
    - isovalent-hubble-datasource
prometheus:
  ingress:
    enabled: true
    hosts:
      - prometheus.tronic.sk
    ingressClassName: nginx
  thanosService:
    enabled: true
  prometheusSpec:
    enableFeatures: ["exemplar-storage"]
    enableOTLPReceiver: true    
    enableRemoteWriteReceiver: true
    thanos:
      image: quay.io/thanos/thanos:v0.32.2
      objectStorageConfig:
        key: "objstore.yml"
        name: "monitoring-s3"
    walCompression: false
prometheusOperator:
  enabled: true
