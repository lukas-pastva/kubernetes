global:
  dnsService: rke2-coredns-rke2-coredns
  extraEnv:
    - name: S3_TEMPO_ENDPOINT
      valueFrom:
        secretKeyRef:
          name: monitoring-s3
          key: S3_ENDPOINT
    - name: S3_TEMPO_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: monitoring-s3
          key: S3_ACCESS_KEY_ID
    - name: S3_TEMPO_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: monitoring-s3
          key: S3_SECRET_ACCESS_KEY
    - name: S3_TEMPO_BUCKET
      valueFrom:
        secretKeyRef:
          name: monitoring-s3
          key: S3_BUCKET
    - name: AWS_S3_FORCE_PATH_STYLE
      value: "true"
tempo:
  searchEnabled: true

reportingEnabled: false
serviceAccount:
  create: true
  automountServiceAccountToken: false

rbac:
  create: false
  pspEnabled: false

gateway:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - host: tempo.tronic.sk
        paths:
          - path: /api
            pathType: Prefix

distributor:
  replicas: 1

ingester:
  replicas: 1
  config:
    replication_factor: 1
  extraArgs:
    - -config.expand-env=true

queryFrontend:
  extraArgs:
    - -config.expand-env=true

querier:
  extraArgs:
    - -config.expand-env=true

compactor:
  extraArgs:
    - -config.expand-env=true

traces:
  jaeger:
    grpc:          { enabled: true }
    thriftBinary:  { enabled: true }
    thriftCompact: { enabled: true }
    thriftHttp:    { enabled: true }

  otlp:
    http: { enabled: true }
    grpc: { enabled: true }

metaMonitoring:
  serviceMonitor:
    enabled: true

prometheusRule:
  enabled: true

server:
  logLevel: debug

storage:
  trace:
    backend: s3
    s3:
      bucket:     ${S3_TEMPO_BUCKET}
      region:     auto
      endpoint:   ${S3_TEMPO_ENDPOINT}
      access_key: ${S3_TEMPO_ACCESS_KEY_ID}
      secret_key: ${S3_TEMPO_SECRET_ACCESS_KEY}
